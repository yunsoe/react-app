{"ast":null,"code":"var _jsxFileName = \"/Users/waddy/Desktop/SMU/Internships/my-app/react-app/my-app/src/components/questions/Survey.js\";\nimport React, { Component } from 'react';\nimport { questions } from './questions';\nimport \"./questions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Survey extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nextQuestionHandler = () => {\n      console.log('Next Question', this.state.answers);\n\n      if (this.state.currentQuestion < this.state.questions.length - 1) {\n        this.setState({\n          currentQuestion: this.state.currentQuestion + 1\n        });\n      }\n    };\n\n    this.prevQuestionHandler = () => {\n      console.log('Previouus');\n\n      if (this.state.currentQuestion > 0) {\n        this.setState({\n          currentQuestion: this.state.currentQuestion - 1\n        });\n      }\n    };\n\n    this.selectOptions = index => {\n      let ob = [...this.state.answers];\n      ob[this.state.currentQuestion] = index + 1;\n      this.setState({\n        answers: ob\n      });\n    };\n\n    this.finishHandler = async () => {\n      console.log('finish');\n      this.props.handleAnswer(this.state.answers);\n    };\n\n    this.state = {\n      questions: questions,\n      currentQuestion: 0,\n      answers: [0, 0, 0, 0, 0, 0]\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.questions);\n  }\n\n  render() {\n    let i = this.state.currentQuestion;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"surveyContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"surverQuestionContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Question \", this.state.currentQuestion + 1, \" of \", this.state.questions.length, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: this.state.questions[i].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"optionsContainer\",\n        children: this.state.questions[i].options.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.answers[i] === index + 1 ? 'options selected' : 'options',\n          onClick: () => this.selectOptions(index),\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: this.prevQuestionHandler,\n        children: \"Previous question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), this.state.currentQuestion !== this.state.questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: this.nextQuestionHandler,\n        children: \"Next question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), this.state.currentQuestion === this.state.questions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: this.finishHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Survey;","map":{"version":3,"sources":["/Users/waddy/Desktop/SMU/Internships/my-app/react-app/my-app/src/components/questions/Survey.js"],"names":["React","Component","questions","Survey","constructor","props","nextQuestionHandler","console","log","state","answers","currentQuestion","length","setState","prevQuestionHandler","selectOptions","index","ob","finishHandler","handleAnswer","componentDidMount","render","i","question","options","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { questions } from './questions'\r\nimport \"./questions.css\"\r\n\r\n\r\nexport class Survey extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questions: questions,\r\n            currentQuestion: 0,\r\n            answers: [0, 0, 0, 0, 0, 0],\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.state.questions);\r\n    }\r\n\r\n    nextQuestionHandler = () => {\r\n        console.log('Next Question', this.state.answers);\r\n        if (this.state.currentQuestion < this.state.questions.length - 1) {\r\n            this.setState({\r\n                currentQuestion: this.state.currentQuestion + 1,\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n    prevQuestionHandler = () => {\r\n        console.log('Previouus');\r\n        if (this.state.currentQuestion > 0) {\r\n            this.setState({\r\n                currentQuestion: this.state.currentQuestion - 1,\r\n            });\r\n        }\r\n    }\r\n    selectOptions = (index) =>{\r\n        let ob =[...this.state.answers];\r\n        ob[this.state.currentQuestion] = index+1\r\n        this.setState({\r\n            answers : ob\r\n        })\r\n         }\r\n\r\n    finishHandler = async () => {\r\n        console.log('finish');\r\n        this.props.handleAnswer(this.state.answers);\r\n\r\n    }\r\n\r\n    render() {\r\n            let i = this.state.currentQuestion;\r\n        return (\r\n            <div className='surveyContainer'>\r\n                <div className='surverQuestionContainer'>\r\n                    <h2>Question {this.state.currentQuestion+1} of {this.state.questions.length} </h2>\r\n                    <div>\r\n                        <h3>{this.state.questions[i].question}</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='optionsContainer'>\r\n                {this.state.questions[i].options.map((item, index)=>(\r\n                    <div key={index}\r\n                         className={this.state.answers[i] === index+1 ? 'options selected' : 'options'}\r\n                         onClick = {()=>this.selectOptions(index)}\r\n                         > \r\n                         {item}\r\n                    </div>\r\n                ))}\r\n                </div>\r\n\r\n                <button className=\"button\"\r\n                    onClick={this.prevQuestionHandler}>\r\n                    Previous question\r\n                </button>\r\n                { this.state.currentQuestion !== this.state.questions.length - 1 &&\r\n                <button className=\"button\"\r\n                    onClick={this.nextQuestionHandler}>\r\n                    Next question\r\n                </button>\r\n                }\r\n                {this.state.currentQuestion === this.state.questions.length - 1 &&\r\n                    <button className=\"button\"\r\n                        onClick={this.finishHandler}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Survey;"]},"metadata":{},"sourceType":"module"}